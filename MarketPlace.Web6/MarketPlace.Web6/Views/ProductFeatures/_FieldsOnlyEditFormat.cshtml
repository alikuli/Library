@model ModelsClassLibrary.ModelsNS.FeaturesNS.ProductFeature

@{
    string disabled = " ";
    string buttonClass = "btn btn-success btn-sm m-1";
    
    if (Model.IsDeleting)
    {
        disabled = " disabled ";
    }


    string createToolTip = "Create a new feature";
    string createFeaturesNotInListPath = Url.Action("CreateNewFeature", "ProductFeatures", new { returnUrl = Request.Url.PathAndQuery, productId = Model.ProductId, parentName = Model.FullName() });
    string createNewFeaturePath = Url.Action("CreateNewFeature", "ProductFeatures", new { returnUrl = Request.Url.PathAndQuery, productId = Model.ProductId, parentName = Model.FullName() });
}

    <div class="form-horizontal form-inline ">

        <div class="">


            @Html.HiddenFor(x => x.Name)
            @Html.HiddenFor(x => x.ProductId)

            <h2>
                For @Model.Product.FullName()
            </h2>


            <div class="form-group">
                @Html.LabelFor(model => model.MenuFeatureId, htmlAttributes: new { @class = "mr-5" })
                @Html.DropDownListFor(x => x.MenuFeatureId,
                             (@Model.SelectListFeature as IEnumerable<SelectListItem>),
                              "--- Select Feature ---",
                              new { @class = "form-control", dis = disabled })

                
                @if (!Model.IsDeleting)
                {
                    <button type="button"
                            data-toggle="tooltip"
                            title="@createToolTip"
                            data-placement="top"
                            onclick="openPath('@createNewFeaturePath')"
                            class="@buttonClass"
                            @disabled>

                        Create Feature not in list
                    </button>
                }
            </div>

            <div class="form-group mt-3">
                @Html.LabelFor(model => model.Comment, "Describe Feature", htmlAttributes: new { @class = "mr-4" })
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>




    </div>
