@model ModelsClassLibrary.ModelsNS.AddressNS.AddressWithId


<div class="form-horizontal">
    <div class="container">

        @Html.HiddenFor(x => x.GeoPosition.Latitude)
        @Html.HiddenFor(x => x.GeoPosition.Longitude)
        @Html.HiddenFor(x => x.Id)
        <div class="row">
            @Html.LabelFor(model => model.HouseNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HouseNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter house/flat number" } })
            </div>
        </div>



        <div class="row">
            @Html.LabelFor(model => model.Road, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Road, new { htmlAttributes = new { @class = "form-control", placeholder = "Name of road" } })
            </div>
        </div>



        <div class="row">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control", placeholder = "Additional address info" } })
            </div>
        </div>


        <div class="row">
            @Html.LabelFor(model => model.TownName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TownName, new { htmlAttributes = new { @class = "form-control", placeholder = "Eg: Gulberg, Johar Town, Defense 8" } })
            </div>
        </div>


        <div class="row">
            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control", placeholder = "Name of city" } })
            </div>
        </div>



        <div class="row">
            @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StateName, new { htmlAttributes = new { @class = "form-control", placeholder = "The name of province / state" } })
            </div>
        </div>



        <div class="row">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.CountryId,
                 (@ViewBag.CountrySelectList as IEnumerable<SelectListItem>),
                  "--- Select Country---",
                  new { @class = "form-control" })
            </div>
        </div>


        <div class="row">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", placeholder = "Code for address" } })
            </div>
        </div>


        <div class="row">
            @Html.LabelFor(model => model.Attention, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Attention, new { htmlAttributes = new { @class = "form-control", placeholder = "Name of contact person" } })
            </div>
        </div>


        <div class="row">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", placeholder = "A comment that you may have" } })
            </div>
        </div>
    </div>

 </div>

@section scripts{
    <script>
        $(function () {


            var options = {
                enableHighAccuracy: true,
                timeout: 5000,
                maximumAge: 0
            };

            $(window).load(function () {
                //Here is my logic now
                navigator.geolocation.getCurrentPosition(initialize, error, options);
            });
        });
        function error(err) {
            console.warn('Error Code: ' + err.code + ". Msg: " + err.message );
        }
        function initialize(pos) {
            var crd = pos.coords;

            console.log('Your current position is:');
            console.log('Latitude : ' + crd.latitude);
            console.log('Longitude: ' + crd.longitude);
            console.log('More or less ' + crd.accuracy + ' meters.');

            document.getElementById('Latitude').value = val;
            document.getElementById('Longitude').value = val;


        }

    </script>
}