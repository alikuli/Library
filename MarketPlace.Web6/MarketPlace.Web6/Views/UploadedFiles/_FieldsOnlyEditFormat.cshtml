@model ModelsClassLibrary.ModelsNS.UploadedFileNS.UploadedFile

@*this is where you will return if ReturnUrl has any value*@
@Html.HiddenFor(model => model.ReturnUrl)


    <div class="form-horizontal">

        @Html.Partial(@"_Name_And_DetailInfo")


        <div class="form-group">
            @Html.LabelFor(model => model.OriginalNameWithoutExtention, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OriginalNameWithoutExtention, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OriginalNameWithoutExtention, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Extention, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Extention, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Extention, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RelativePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RelativePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RelativePath, "", new { @class = "text-danger" })
            </div>
        </div>

     </div>

