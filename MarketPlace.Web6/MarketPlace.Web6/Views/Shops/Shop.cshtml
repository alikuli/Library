@model ModelsClassLibrary.ModelsNS.BuySellDocNS.ShopVM

@{
    ViewBag.Title = "CreateShop";
    int count = 0;
}

<h2>Create Shop new</h2>
@using (Html.BeginForm(new { enctype = "multipart/form-data",FormMethod= FormMethod.Post }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ReturnUrl)
    @Html.HiddenFor(x => x.MenuPathMainId)
    @Html.HiddenFor(x => x.Id)
    
        
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Partial("_messages")


        <h3 class="text-capitalize text-center">You can create a shop or extend it's life from here</h3>
        <p>@Model.Explaination</p>
        <h5 class="text-danger text-capitalize text-center">@Model.ShopPath()</h5>
        <hr />

        @if (Model.PreviousStores.IsNullOrEmpty())
        {

        }
        else
        {
            <div class="row">
                <div class="col">
                    <h4>Your other shops</h4>

                </div>
                </div>
            
            foreach (var item in Model.PreviousStores.OrderBy(x => x).ToList())
            {
                string isExpired = item.Trim().Substring(item.Length - 2).ToLower();
                string calculatedClass = isExpired == "no" ? "col" : "col text-danger";
                
                count++;
                <div class="row">
                    <div class="@calculatedClass">
                        @count) @item
                    </div>

                </div>
            }
            <hr />
            <br />
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ShopName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShopName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShopName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NoOfMonths, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" value="1" min="1" max="12" step="1" id="NoOfMonths" name="NoOfMonths" />
                @*@Html.EditorFor(model => model.NoOfMonths, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.NoOfMonths, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RatePerMonth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RatePerMonth_Formatted, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        @Html.Partial(@"ViewControls/Uploads/_ShowUploads")


       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-1">
                <input type="submit" value="accept" name="button" class="btn btn-success" />
                <input type="submit" value="cancel" name="button" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
