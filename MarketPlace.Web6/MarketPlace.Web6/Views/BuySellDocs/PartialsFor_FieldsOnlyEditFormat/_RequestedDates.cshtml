@*@model ModelsClassLibrary.ModelsNS.DocumentsNS.BuySellDocNS.BuySellDoc



@{
    ModelsClassLibrary.ModelsNS.DocumentsNS.BuySellDocNS.BuySellDocViewStateNS.IBuySellDocViewState viewState_RqDates = Model.BuySellDocViewState;

    //bool isEnableAgreedFreightAndDate_DelyFormat = viewState_DelyFormat.HD_Enable_AgreedFreightAndDate;
    //bool isShowAgreedFreightAndDate = viewState_DelyFormat.HD_Show_AgreedFreightAndDate;
    bool showRequestedPickupDates = viewState_RqDates.HD_Show_Vehical_Type;
    bool enableRequestedPickupDates = viewState_RqDates.HD_Enable_Vehical_Type;
    string currentColor_DelyFormat = viewState_RqDates.CurrentColorClass;




}






@if (showRequestedPickupDates)
{
    @if (enableRequestedPickupDates)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.PleasePickupOnDate_Start, htmlAttributes: new { @class = "" })
            @Html.EditorFor(x => x.PleasePickupOnDate_Start, new { htmlAttributes = new { @class = "form-control  ", @placeholder = "Enter date you want pickup", data_date_format = "yyyy/mm/dd" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PleasePickupOnDate_End, htmlAttributes: new { @class = "" })
            @Html.EditorFor(x => x.PleasePickupOnDate_End, new { htmlAttributes = new { @class = "form-control  ", @placeholder = "Enter date you want pickup" } })
        </div>
    }
    else
    {
        @Html.HiddenFor(x => x.PleasePickupOnDate_Start)
        @Html.HiddenFor(x => x.PleasePickupOnDate_End)
        <div class="form-group">
            @Html.LabelFor(model => model.PleasePickupOnDate_Start, htmlAttributes: new { @class = "" })
            @Html.EditorFor(x => x.PleasePickupOnDate_Start, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter date you want pickup", disabled = "disabled" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PleasePickupOnDate_End, htmlAttributes: new { @class = "" })
            @Html.EditorFor(x => x.PleasePickupOnDate_End, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter date you want pickup", disabled = "disabled" } })
        </div>
    }



}
else
{
    @Html.HiddenFor(x => x.PleasePickupOnDate_Start)
    @Html.HiddenFor(x => x.PleasePickupOnDate_End)
}*@
        


