@model ModelsClassLibrary.ModelsNS.DocumentsNS.BuySellDocNS.BuySellDoc



@{
    ModelsClassLibrary.ModelsNS.DocumentsNS.BuySellDocNS.BuySellDocViewStateNS.IBuySellDocViewState viewState_AgreedFrt = Model.BuySellDocViewState;

    bool isShowRequireInsurance = viewState_AgreedFrt.HD_Show_RequireInsuranace;
    bool isEnableRequireInsurance = viewState_AgreedFrt.HD_Enable_RequireInsuranace;


}


        @if (isShowRequireInsurance)
        {
            <div class="">

                @if (isEnableRequireInsurance)
                {

                    <div class="form-group">
                        <strong>@Html.LabelFor(model => model.InsuranceRequired, htmlAttributes: new { @class = "background-ltgrey p-2" })</strong>
                        <div class="row">
                            <div class="col">
                                @Html.EditorFor(x => x.InsuranceRequired, new { htmlAttributes = new { @class = "form-control form-inline", @placeholder = "If your product is guaranteed, you may need to pay more, but the delivery man will have to pay you this amount if he does not deliver the goods intact." } })
                            </div>
                            <div class="col">

                                @if (Model.BuySellDocStateEnum == BuySellDocStateENUM.ReadyForPickup)
                                {
                                    if(Model.BuySellDocumentTypeEnum == BuySellDocumentTypeENUM.Sale)
                                    { 
                                        <button type="submit" class="btn  btn-success"><small>Update Insurance</small> </button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    


                }


                else
                {


                    @Html.HiddenFor(x => x.InsuranceRequired)

                    <div class="form-group">
                        <strong>@Html.LabelFor(model => model.InsuranceRequired, htmlAttributes: new { @class = "background-ltgrey p-2" })</strong>
                        @Html.EditorFor(x => x.InsuranceRequired_ToSring, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @placeholder = "If your product is guaranteed, you may need to pay more, but the delivery man will have to pay you this amount if he does not deliver the goods intact." } })
                    </div>


                }
            </div>

        }


