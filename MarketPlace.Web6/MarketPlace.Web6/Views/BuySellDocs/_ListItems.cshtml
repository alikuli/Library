@model ModelsClassLibrary.ModelsNS.DocumentsNS.BuySellDocNS.BuySellDoc



        @*
            We dont want to create from here... all creations should be from the shopping cart.
            @Html.ActionLink("Create New Item", "Create", "BuySellItems", new { parentId = Model.Id, returnUrl = Request.Url.PathAndQuery }, new { @class ="btn btn-success m-1"})
            
            *@


@{
    
    
    
}
        <table class="table table-bordered">
            <tr>
                <th>Sr#</th>
                <th>Item</th>
                <th>Ordered</th>
                <th>Price</th>
                <th>Extention</th>
                <th></th>
            </tr>

            @if (!Model.BuySellItems.IsNullOrEmpty())
            {
                List<ModelsClassLibrary.ModelsNS.DocumentsNS.BuySellItemNS.BuySellItem> buySellItemsList = Model.BuySellItems.Where(x => x.MetaData.IsDeleted == false).ToList();
                decimal ExtentionSubTotal = 0;
                decimal count = 0;
                string deleteToolTip = "Delete the item";
                string editToolTip = "Edit the item";

                foreach (ModelsClassLibrary.ModelsNS.DocumentsNS.BuySellItemNS.BuySellItem item in buySellItemsList)
                {
                    string delete_Item_path = Url.Action("Delete", "BuySellItems", new { id = item.Id, returnUrl = Request.Url.PathAndQuery, buySellDocumentTypeEnum = Model.BuySellDocumentTypeEnum });
                    string edit_Item_path = Url.Action("Edit", "BuySellItems", new { id = item.Id, returnUrl = Request.Url.PathAndQuery, buySellDocumentTypeEnum = Model.BuySellDocumentTypeEnum });
                    string accept_Item_path ="";
                    string reject_Item_path ="";
                    
                    count++;
                    
                    string salePriceDifferentClass = "";
                    decimal totalExtention = item.Quantity.RemainingDecimal * item.SalePrice;
                    ExtentionSubTotal += totalExtention;

                    string tooltip_SrNo = "Line number";
                    string tooltip_Item = "This is the name of the item";
                    string tooltip_Ordered = "This is the quantity ordered";
                    string tooltip_Price = "This is the price. If it is red, it has been changed.";
                    string tooltip_Extention = "This is the total sale at the current price.";
                    string tooltip_RejectButton = "If you reject the change, press this button";
                    string tooltip_AcceptButton = "If you accept the change, press this button.";


                                                        
                    if(!item.IsSalePriceSame)
                    {
                        salePriceDifferentClass =  "badge-problem";
                        tooltip_Price = string.Format("The price has been changed from {0} to {1}. There is a difference of {2}. If you do not agree, delete or edit the item so that the price is satisfactory. If you delete it, the sale is over. If you edit it, maybe buyer will accept the price. In any case, none of the items will not be available for shipping until price issue is resolved.",item.OriginalPrice_Formatted,item.SalePrice_Formatted,item.Difference_Formatted);
                    }
                    
                    <tr>
                        <td data-toggle="tooltip" title="@tooltip_SrNo" data-placement="top">@count)</td>
                        <td data-toggle="tooltip" title="@tooltip_Item" data-placement="top">@item.FullName()</td>
                        <td data-toggle="tooltip" title="@tooltip_Ordered" data-placement="top">@string.Format("{0:N2}", item.Quantity.Remaining)</td>
                        <td data-toggle="tooltip" title="@tooltip_Price" data-placement="top" class="@salePriceDifferentClass">
                        @string.Format("{0:N2}", item.SalePrice)
                        
                            @*@if (!item.IsSalePriceSame)
                            {

                                <button data-toggle="tooltip"
                                        title="@tooltip_AcceptButton"
                                        data-placement="right"
                                        class="btn btn-sm btn-info"
                                        onclick="openPath('@accept_Item_path')">

                                    <img width="20" src="~/ContentMine/Icons/smilingFace.png" />
                                </button>

                                <button data-toggle="tooltip"
                                        title="@tooltip_RejectButton"
                                        data-placement="left"
                                        class="btn btn-sm btn-warning"
                                        onclick="openPath('@reject_Item_path')">

                                    <img width="20" src="~/ContentMine/Icons/SadFace.png" />
                                </button>
                            }*@

                        </td>
                        <td data-toggle="tooltip" title="@tooltip_Extention" data-placement="top">@string.Format("{0:N2}", totalExtention)</td>
                        <td >
                    
                            <button data-toggle="tooltip"
                                    title="@editToolTip"
                                    data-placement="top"
                                    class="btn btn-sm btn-success"
                                    onclick="openPath('@edit_Item_path')">

                                <img width="20" src="~/ContentMine/Icons/Edit.png" />
                            </button>
                            <button data-toggle="tooltip"
                                    title="@deleteToolTip"
                                    data-placement="top"
                                    class="btn btn-sm btn-danger"
                                    onclick="openPath('@delete_Item_path')">

                                <img width="20" src="~/ContentMine/Icons/GarbageCan.png" />
                            </button>
                    
                        </td>


                    </tr>

    
                }
            }

        </table>






