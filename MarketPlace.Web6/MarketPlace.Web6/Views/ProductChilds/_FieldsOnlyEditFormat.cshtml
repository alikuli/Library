@model ModelsClassLibrary.ModelsNS.ProductChildNS.ProductChild

@{

    string childReturnUrl = Request.Url.PathAndQuery;
    string toolTipIdentificationNumber = "This is a unique identification number that can be given to the product. This is useful if you want to post several same products with different identification number, eg cars and their number plates.";
    string create_feature_Path = Url.Action("Create", "ProductChildFeatures", new { productChildId = Model.Id, returnUrl = childReturnUrl });
    bool isCreate = Model.MenuManager.IsCreate;
}

<div class="well p-3">
    @Html.Partial(@"_Name_And_DetailInfo")

    @Html.HiddenFor(x => x.OwnerId)
    @Html.HiddenFor(x => x.ProductId)

    <div class="form-group">
        @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { @class = "", data_toggle = "tooltip", title = @toolTipIdentificationNumber, data_placement = "top" })
        @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })
    </div>
</div>


<div class="well p-3 mt-3">
    @Html.EditorFor(x => x.Sell)
</div>

@*
    <div class="well p-3 mt-3">
        @Html.EditorFor(x => x.Buy)
    </div>
*@


@if (!isCreate)
{
    @Html.Partial(@"~/Views/ProductChilds/_ProductChildFeatures.cshtml")
}


