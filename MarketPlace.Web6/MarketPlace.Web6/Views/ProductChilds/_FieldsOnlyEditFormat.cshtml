@model ModelsClassLibrary.ModelsNS.ProductChildNS.ProductChild

@{

    string childReturnUrl = Request.Url.PathAndQuery;
    string toolTipIdentificationNumber = "This is a unique identification number that can be given to the product. This is useful if you want to post several same products with different identification number, eg cars and their number plates.";
    string create_feature_Path = Url.Action("Create", "ProductChildFeatures", new { productChildId = Model.Id, returnUrl = childReturnUrl });
    bool isCreate = Model.MenuManager.IsCreate;

    string addressPath = @Url.Action("GetAddressInfo", "Addresses");
    string dropDownListName = "ShipFromAddressId";
    string preNameOfFields = "ShipFromAddressComplex";
    //string updateJavascript = "updateAddressFields('@dropDownListName', '@preNameOfFields', '@addressPath')" ;
    string toolTip_IsTokenPaymentAccepted = "If you mark this true then you may get payments in tokens/non-refundable money which can be used to buy services in the system, but cannot be converted to cash.";
    string toolTip_Hide = "If true, you will stop getting billed for this product, but it will also stop showing to customers. You can always switch it on again by going to your products menu.";

}
<div class="row border border-dark p-1 w-100 background-ltgreen" style="justify-content:center">
    <h4>Product: @Model.FullName()</h4>
</div>

<div class="row border border-dark p-1 w-100 ">
    @Html.HiddenFor(x => x.OwnerId)
    @Html.HiddenFor(x => x.ProductId)
    <div class="col-lg">
        <div class="form-group">
            @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { @class = "", data_toggle = "tooltip", title = @toolTip_Hide, data_placement = "top" })
            @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control ml-1" } })
            @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })
        </div>

        @Html.Partial(@"_Name_And_DetailInfo")




        @Html.EditorFor(x => x.Sell)


        <div class="form-check">
            @Html.CheckBoxFor(x => x.Hide)
            @Html.LabelFor(x => x.Hide, htmlAttributes: new { @class = "", data_toggle = "tooltip", title = @toolTip_IsTokenPaymentAccepted, data_placement = "top" })
        </div>

        <div class="form-check">
            @Html.CheckBoxFor(model => model.IsNonRefundablePaymentAccepted)
            @Html.LabelFor(model => model.IsNonRefundablePaymentAccepted, htmlAttributes: new { @class = "", data_toggle = "tooltip", title = @toolTip_IsTokenPaymentAccepted, data_placement = "top" })


        </div>


    </div>

    <div class="col-lg">





        <div class=" background-ltblue p-2">
            <label>Stored At</label>
            <div class="form-group">
                @Html.DropDownListFor(x => x.ShipFromAddressId,
               (Model.SelectListShipFromAddress as IEnumerable<SelectListItem>),
              "--- Where is product stored ---",
                                         new { @class = "form-control", onchange = "updateAddressFields('" + @dropDownListName + "', '" + @preNameOfFields + "', '" + @addressPath + "')" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShipFromAddressComplex, htmlAttributes: new { @class = "", data_toggle = "tooltip", title = @toolTipIdentificationNumber, data_placement = "top" })
            @Html.EditorFor(model => model.ShipFromAddressComplex, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShipFromAddressComplex, "", new { @class = "text-danger" })
        </div>


    </div>
</div>

@*
    <div class="well p-3 mt-3">
        @Html.EditorFor(x => x.Buy)
    </div>
*@


@if (!isCreate)
{
    <div class="row border border-dark p-1 w-100 background-ltgreen" style="justify-content:center">
        <div class="col">
            <h4>Add Features</h4>

        </div>
    </div>

    <div class="row border border-dark p-1 w-100">
        <div class="col">
            @Html.Partial(@"~/Views/ProductChilds/_ProductChildFeatures.cshtml")


        </div>
    </div>
}

