@model ModelsClassLibrary.ModelsNS.ProductChildNS.ProductChild

@{

    string childReturnUrl = Request.Url.PathAndQuery;
    int count = 0;
    // VV string toolTipIdentificationNumber = "This is a unique identification number that can be given to the product. This is useful if you want to post several same products with different identification number, eg cars and their number plates.";
    string liClass = "active";
    //string carouselItemClass = "carousel-item";
    string carouselItemClass = "carousel-item active";

    string editAction = Url.Action("Edit", Model.MenuManager.IndexMenuVariables.EditController, new { id = Model.MenuManager.IndexMenuVariables.IdForEdit, returnUrl = Model.MenuManager.ReturnUrl});
    string editIconToolTip = "You can Edit your product from here";
    string shoppingCartToolTip = "You can buy this by pressing the button once";

    Model.MenuManager.IndexMenuVariables.MessageIcon.Url = Url.Action("SaleMessage", "Messages", new {productChildId = Model.Id, returnUrl = Model.MenuManager.ReturnUrl, messageEnum = MessageENUM.Paid, menuEnum = Model.MenuManager.MenuState.MenuEnum });
    
}


<style>
    .row-col2 {
        /*margin-right: 1px;*/
        margin-left: 1%;
        margin-right: -1%;
        width: 98%;
    }

    .row2col1 {
        margin-left: -1%;
        /*margin-right: 1%;*/
        /*width: 98%;*/
    }

    .container-fluid{
        min-width: 400px;
    }
</style>


<div class="container-fluid mx-auto text-center">
    <div class="row m-1" @*style="background-color:brown"*@>
        <div class="col-lg-6 p-1" @*style="background-color:yellow"*@>


            <div class="border border-info rounded p-2" @*style="background-color:blueviolet"*@>
                <h1 class="background-ltgrey p-1">@Model.FullName()</h1>
                <h2>@Model.DetailInfoToDisplayOnWebsite</h2>
                <h3>@Model.Sell.SellPriceMoneyFormat</h3>
                <div id="productCarousel" class="carousel slide " data-ride="carousel">


                    <!-- Indicators -->
                    <ul class="carousel-indicators">
                        @foreach (var item in Model.MenuManager.PictureAddresses)
                        {
                        <li data-target="#productCarousel" data-slide-to="@count" class="@liClass"></li>
                            count++;
                            liClass = "";
                        }
                    </ul>

                    <!-- The slideshow -->
                    <!-- added height-->
                    <div class="carousel-inner" style="height:300px; ">
                        @foreach (string item in Model.MenuManager.PictureAddresses)
                        {
                            string addy = "~/ContentMine/MyImages/BlankImage.jpg";
                            if(!item.IsNullOrWhiteSpace())
                            {
                                addy = item;
                            }
                            
                        <div class="@carouselItemClass " >
                            <img src="@Url.Content(@addy)" alt="" class="img-fluid" >
                        </div>
                            carouselItemClass = "carousel-item";
                        }
                    </div>

                    <!-- Left and right controls -->
                    <a class="carousel-control-prev" href="#productCarousel" data-slide="prev">
                        <span class="carousel-control-prev-icon"></span>
                    </a>
                    <a class="carousel-control-next" href="#productCarousel" data-slide="next">
                        <span class="carousel-control-next-icon"></span>
                    </a>

                </div>

                @{
                    
                    string messageUrl = Url.Action("SaleMessage", "Messages", new { productChildId = @Model.Id, returnUrl = @Model.MenuManager.ReturnUrl, messageEnum = MessageENUM.Free, menuEnum = MenuENUM.IndexMenuProductChildLandingPage});
                    
                }
                <div class="btn btn-group mt-1 btn-dark flex-wrap justify-content-center my-btn-Group mx-auto" role="group">


                    @*Shopping cart*@


                        @if (Model.MenuManager.IndexMenuVariables.IconEditProductChild.IsOwnerOfProductChild)
                        {
                            <span data-toggle="tooltip" title="@editIconToolTip" data-placement="top">

                                <button id="@Model.MenuManager.IndexMenuVariables.IconEditProductChild.Id"
                                        class="@Model.MenuManager.IndexMenuVariables.IconEditProductChild.ButtonClass"
                                        data-nameofproduct="@Model.MenuManager.IndexMenuVariables.ShortNameOfProduct"
                                        data-url="@Model.MenuManager.IndexMenuVariables.IconEditProductChild.Url"
                                        onclick="openPath('@editAction')">
                                    <img src="~/ContentMine/Icons/Edit.png" />

                                </button>
                            </span>

                        }
                        else
                        {
                            <span data-toggle="tooltip" title="@shoppingCartToolTip" data-placement="top">

                                <button id="@Model.MenuManager.IndexMenuVariables.ShoppingCartIcon.Id"
                                        class="@Model.MenuManager.IndexMenuVariables.ShoppingCartIcon.ButtonClass"
                                        data-nameofproduct="@Model.MenuManager.IndexMenuVariables.ShortNameOfProduct"
                                        data-url="@Model.MenuManager.IndexMenuVariables.ShoppingCartIcon.Url"
                                        onclick="@Model.MenuManager.IndexMenuVariables.ShoppingCartIcon.OnClick"
                                        @Model.MenuManager.IndexMenuVariables.ShoppingCartIcon.ButtonDisableConditionally>

                                    <span id="@Model.MenuManager.IndexMenuVariables.ShoppingCartIcon.IdCount"
                                          class="@Model.MenuManager.IndexMenuVariables.ShoppingCartIcon.BadgeClass">
                                        @Model.MenuManager.IndexMenuVariables.ShoppingCartIcon.CountIcon
                                    </span>

                                    <img src="~/ContentMine/Icons/ShoppingCartIcon.png" />

                                </button>
                            </span>
                        }






                    <span data-toggle="tooltip" title="I LIKE it! Press to register and tell us why." data-placement="top">
                        <button id="@Model.MenuManager.IndexMenuVariables.LikeIcon.Id"
                                class="@Model.MenuManager.IndexMenuVariables.LikeIcon.ButtonClass"
                                data-nameofproduct="@Model.MenuManager.IndexMenuVariables.ShortNameOfProduct"
                                data-url="@Model.MenuManager.IndexMenuVariables.LikeIcon.Url"
                                data-counturl="@Model.MenuManager.IndexMenuVariables.LikeIcon.UrlCount"
                                data-toggle="modal"
                                data-target="#mymodalnew"
                                onclick="@Model.MenuManager.IndexMenuVariables.LikeIcon.OnClick"
                                @Model.MenuManager.IndexMenuVariables.LikeIcon.ButtonDisableConditionally>


                            <span id="@Model.MenuManager.IndexMenuVariables.LikeIcon.IdCount"
                                  class="@Model.MenuManager.IndexMenuVariables.LikeIcon.BadgeClass">
                                @Model.MenuManager.IndexMenuVariables.LikeIcon.CountIcon
                            </span>
                            <img src="~/ContentMine/Icons/smilingFace.png" />
                        </button>
                    </span>


                    <span data-toggle="tooltip" title="I HATE it! Press button and tell us why?" data-placement="top">

                        <button id="@Model.MenuManager.IndexMenuVariables.UnLikeIcon.Id"
                                class="@Model.MenuManager.IndexMenuVariables.UnLikeIcon.ButtonClass"
                                data-nameofproduct="@Model.MenuManager.IndexMenuVariables.ShortNameOfProduct"
                                data-url="@Model.MenuManager.IndexMenuVariables.UnLikeIcon.Url"
                                data-counturl="@Model.MenuManager.IndexMenuVariables.UnLikeIcon.UrlCount"
                                data-toggle="modal"
                                data-target="#mymodalnew"
                                onclick="@Model.MenuManager.IndexMenuVariables.UnLikeIcon.OnClick"
                                @Model.MenuManager.IndexMenuVariables.UnLikeIcon.ButtonDisableConditionally>

                            <span id="@Model.MenuManager.IndexMenuVariables.UnLikeIcon.IdCount"
                                  class="@Model.MenuManager.IndexMenuVariables.UnLikeIcon.BadgeClass">
                                @Model.MenuManager.IndexMenuVariables.UnLikeIcon.CountIcon
                            </span>

                            <img src="~/ContentMine/Icons/SadFace.png" />

                        </button>
                    </span>
                    <span data-toggle="tooltip" title="Send messages." data-placement="top">

                        <button @*class="btn btn-sm btn-warning"*@
                                id="@Model.MenuManager.IndexMenuVariables.MessageIcon.Id"
                                class="@Model.MenuManager.IndexMenuVariables.MessageIcon.ButtonClass"
                                @Model.MenuManager.IndexMenuVariables.MessageIcon.ButtonDisableConditionally
                                data-nameofproduct="@Model.MenuManager.IndexMenuVariables.ShortNameOfProduct"
                                data-counturl="@Model.MenuManager.IndexMenuVariables.MessageIcon.UrlCount"
                                onclick="location.href='@Model.MenuManager.IndexMenuVariables.MessageIcon.Url'">

                            <img src="~/ContentMine/Icons/Envelope.png" />
                        </button>
                    </span>
                    <span data-toggle="tooltip" title="Make an offer." data-placement="top">

                        <button @*class="btn btn-sm btn-warning"*@
                                id="@Model.MenuManager.IndexMenuVariables.OfferIcon.Id"
                                class="@Model.MenuManager.IndexMenuVariables.OfferIcon.ButtonClass"
                                @Model.MenuManager.IndexMenuVariables.OfferIcon.ButtonDisableConditionally
                                data-nameofproduct="@Model.MenuManager.IndexMenuVariables.ShortNameOfProduct"
                                data-counturl="@Model.MenuManager.IndexMenuVariables.OfferIcon.UrlCount"
                                onclick="location.href='@Model.MenuManager.IndexMenuVariables.OfferIcon.Url'">

                            <img src="~/ContentMine/Icons/Offer.png" />
                        </button>
                    </span>

                </div>
                <div>
                    <a href="@Url.Content(Model.MenuManager.ReturnUrl)">Go Back</a>

                </div>
            </div>
        </div>

        <div class="col-lg-6 border border-info rounded mt-1 mb-1 row-col2" @*style="background-color:aliceblue;"*@>
            <div class="">
                <h2 class="">Features</h2>
                <ul class="text-left">
                    @if (!Model.AllFeatures.IsNullOrEmpty())
                    {
                        
                        foreach (var item in Model.AllFeatures.Where(x => x.MetaData.IsDeleted == false).OrderBy(x => x.Name).ToList())
                        {
                            if (@item.Comment.IsNullOrWhiteSpace())
                            {
                                continue;
                            }
                            <li>
                                <strong>@item.Name:</strong>
                                @item.Comment
                            </li>
                        }
                    }
                </ul>

            </div>

        </div>
    </div>

    <div class="row m-1" @*style="background-color:yellowgreen; "*@>

        @*<div class="col-lg-6 order-sm-2 order-lg-0 " style="background-color:cadetblue; ">*@
        <div class="col-lg-6 pl-1 pr-1" @*style="background-color:cadetblue; "*@>
            <div class="border border-info rounded">
                <h2 class="text-center background-ltgrey">Owner Information</h2>
                <ul class="m-2">
                    <li>Stoic. I have done business with this owner. He is an honest guy!</li>
                    <li>RPLANE. I have done business with this owner. He is an honest guy!</li>
                </ul>
            </div>
        </div>


        <div class="col-lg-6 my-col border border-info rounded row-col2 mt-md-0 mt-sm-2 pl-0 pr-0">
            <div class=" ">
                <h2 class="text-center background-ltgrey">Owner NEXT Information</h2>
                <ul class="m-2">
                    <li>Stoic. I have done business with this owner. He is an honest guy!</li>
                    <li>RPLANE. I have done business with this owner. He is an honest guy!</li>
                    <li>Stoic. I have done business with this owner. He is an honest guy!</li>
                    <li>RPLANE. I have done business with this owner. He is an honest guy!</li>
                    <li>Stoic. I have done business with this owner. He is an honest guy!</li>
                    <li>RPLANE. I have done business with this owner. He is an honest guy!</li>
                    <li>Stoic. I have done business with this owner. He is an honest guy!</li>
                    <li>RPLANE. I have done business with this owner. He is an honest guy!</li>
                    <li>Stoic. I have done business with this owner. He is an honest guy!</li>
                    <li>RPLANE. I have done business with this owner. He is an honest guy!</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row">
        <a href="@Url.Content(Model.MenuManager.ReturnUrl)">Go Back</a>
    </div>
</div>



@*Modal to show like/Unlike Users*@


<div class="modal fade" id="mymodalnew" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalHeading"><span id="myModalHeading.span" class=""></span></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body" id="myModalbodyNewid">
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success d-none" id="modalNewCloseBtnId" data-dismiss="modal">Save</button>
            </div>
        </div>
    </div>
</div>
