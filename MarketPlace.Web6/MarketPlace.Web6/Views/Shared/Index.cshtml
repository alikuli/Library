@model ModelsClassLibrary.ViewModels.IndexListVM
@Html.HiddenFor(x => x.MenuManager.MenuState.MenuEnum)

@{
    
    ViewBag.Title = @Model.Heading.Main;
    Model.MenuManager.MenuState.ControllerCurrentName = this.ViewContext.RouteData.Values["controller"].ToString();

    string controllerNameForCreate = Model.MenuManager.MenuState.CreateAndEditLink_ControllerName;
    string controllerNameForEdit = Model.MenuManager.MenuState.CreateAndEditLink_ControllerName;
    
    string searchFor = Model.SearchFor;
    string menuPathmainId = Model.MenuManager.MenuState.MenuPathMainId;
    string selectedId = Model.SelectedId;

    EnumLibrary.EnumNS.MenuENUM menuEnum = Model.MenuManager.MenuState.MenuEnum ;
    SortOrderENUM sortOrderEnum = Model.SortOrderEnum;
    bool showCreateButton = Model.MenuManager.MenuState.ShowCreateButton;
    string createButtonText = Model.MenuManager.MenuState.CreateLink_Name;

    string returnUrl = Request.Url.PathAndQuery;
    Model.MenuManager.BreadCrumbManager.Push(Model.MenuManager.MenuState.MenuDisplayName, returnUrl);

}






    <p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </p>
    
    @Html.Partial("_messages")

    @*This is the heading*@





<div class="row">
    <div class="col-xs-6 col-lg-6">
        @Html.Partial(@"ViewControls/BreadCrumbs/_newBreadCrumbs",@Model.MenuManager.BreadCrumbManager)
    </div>

    <div class="col-xs-6 col-lg-6">
            <div class="pull-right">
                <h5>@Model.NoOfRecords 
                    @if (!@Model.MenuManager.WebClicksCount.IsNullOrWhiteSpace())
                    {
                        <span class="text-danger">
                            (@Model.MenuManager.WebClicksCount)
                        </span>
                    }
                </h5>
                
            </div>
        
    </div>

</div>


<div >
    <div class="panel-group ">
        <div class="panel panel-info">
            <div class="panel-heading ">
                <div class="panel-title">

                    <div class="row">
                        <div class="col-xs-12 col-lg-3 ">
                            <a data-toggle="collapse" href="#collapse1">
                                <strong>
                                    <small>@Model.Heading.SortOrderDescription.ToString().ToTitleSentance()</small>
                                </strong>
                            </a>

                        </div>
                        <div class="col-xs-12 col-lg-4 ">
                            <div>
                                @using (Html.BeginForm())
                                {
                                    //string isandForSearch = "";
                                    <span>
                                        @Html.TextBox("searchFor", @searchFor, new { @placeholder = "Search/Find", size = 12 })
                                        <button type="submit" class="btn btn-info btn-sm">
                                            <span class="fas fa-search"> Search</span>
                                        </button>

                                    </span>
                                    <br />
                                    <div class="col-xs-4">
                                        @Html.RadioButton("isandForSearch", "And",true, new { id = "IsAnd" })
                                        <label for="IsAnd" data-toggle="tooltip" title="Use AND if you want both all the search words to be present"><span><span>And</span></span></label>

                                    </div>
                                    <div class="col-xs-4">
                                        @Html.RadioButton("isandForSearch", "Or", false, new { id = "IsOr"})
                                        <label for="IsOr" data-toggle ="tooltip"  title="Use OR if you want to find any occourance of any of the search words"><span><span>OR</span></span></label>
                                    </div>
                                }
                            </div>


                        </div>
                        <div class="col-xs-6 col-lg-2">
                            <div>
                                @if (showCreateButton)
                                {

                                    <div>
                                        @Html.ActionLink(createButtonText, "Create", @controllerNameForCreate, new { menuEnum = menuEnum, menuPathMainId = menuPathmainId, sortBy = sortOrderEnum, searchFor = searchFor, selectedId = selectedId }, new { @class = "text-danger btn btn-success btn-sm" })
                                    </div>
                                }

                            </div>


                        </div>

                        <div class="col-xs-6 col-lg-1 ">
                            <div >
                                @Html.ActionLink("Print", "Index", new { sortBy = sortOrderEnum, searchFor = searchFor, selectedId = selectedId, print = true, menuEnum = menuEnum  }, new { @class = "btn btn-danger btn-sm", target = "_blank" })
                            </div>


                        </div>

                    </div>
                </div>
            </div>



            <div id="collapse1" class="panel-collapse collapse">
                <div class="panel-body">
                    <div class="row ">
                        <div class="container">




                            <div class="col-sm-2 ">
                                @Html.ActionLink(Model.SortOrder1_Description_Asc, "Index", new { sortBy = SortOrderENUM.Item1_Asc, searchFor = searchFor, selectedId = selectedId, menuEnum = menuEnum  }, new { @class = "btn btn-primary" }) <br />
                                @Html.ActionLink(Model.SortOrder1_Description_Dsc, "Index", new { sortBy = SortOrderENUM.Item1_Dsc, searchFor = searchFor, selectedId = selectedId, print = false, menuEnum = menuEnum }, new { @class = "btn btn-danger" })
                            </div>

                            <div class="col-sm-2 ">
                                @if (!Model.NameInput2.IsNullOrWhiteSpace())
                                {
                                <span>
                                    @Html.ActionLink(Model.SortOrder2_Description_Asc, "Index", new { sortBy = SortOrderENUM.Item2_Asc, searchFor = searchFor, selectedId = selectedId, menuEnum = menuEnum }, new { @class = "btn btn-primary" }) <br />
                                    @Html.ActionLink(Model.SortOrder2_Description_Dsc, "Index", new { sortBy = SortOrderENUM.Item2_Dsc, searchFor = searchFor, selectedId = selectedId, menuEnum = menuEnum }, new { @class = "btn btn-danger" })
                                </span>
                                }
                            </div>

                            <div class="col-sm-2 ">
                                @if (!Model.NameInput3.IsNullOrWhiteSpace())
                                {
                                <span>
                                    @Html.ActionLink(Model.SortOrder3_Description_Asc, "Index", new { sortBy = SortOrderENUM.Item3_Asc, searchFor = searchFor, selectedId = selectedId, menuEnum = menuEnum  }, new { @class = "btn btn-primary" }) <br />
                                    @Html.ActionLink(Model.SortOrder3_Description_Asc, "Index", new { sortBy = SortOrderENUM.Item3_Dsc, searchFor = searchFor, selectedId = selectedId, menuEnum = menuEnum  }, new { @class = "btn btn-danger" })
                                </span>
                                }
                            </div>

                            <div class="col-sm-2  text-right">

                            </div>

                            <div class="row ">
                                <div class="col-sm-8">
                                </div>

                                <div class="col-sm-4">
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


@if (!Model.SortedAndFilteredData().IsNullOrEmpty())
{


        if (Model.IsImageTiled)
        {
            @Html.Partial(@"ViewControls/index/_IndexMiddlePart - TiledPictures")
        }
        else
        {
            @Html.Partial(@"ViewControls/index/_IndexMiddlePart")
        }
}
else
{
        <h3>- No Data -</h3>
}





    @section styles{

        <style>
            /* CSS used here will be applied after bootstrap.css */

            body {
                padding-top: 50px;
            }

            .thumbnail {
                position: relative;
                overflow: hidden;
            }

            .caption {
                position: absolute;
                top: 0;
                right: 0;
                background: rgba(90, 90, 90, 0.75);
                width: 100%;
                height: 100%;
                padding: 2%;
                display: none;
                text-align: left;
                font-size: 7pt;
                color: #fff !important;
                z-index: 2;
            }
        </style>

    }


    @section scripts{
    <script src="~/Scripts/MyScripts/IndexScripts1.js"></script>

        <script>

            @*$("#printButton").click(function () {
            window.open("@Url.Action("Print", new { sortBy = SortOrderENUM.Item1_Asc, searchFor = @Model.SearchFor as string, selectedId = @Model.SelectedId as string })", "_blank",
                "menubar=no, toolbar=no, resizable=no, top=100, left=200, width=500, height=500");
        });*@



            $('#AddUser').on('click', function () {
                $("#AddUserForm").dialog({
                    autoOpen: true,
                    position: { my: "center", at: "top+350", of: window },
                    width: 1000,
                    resizable: false,
                    title: 'Add User Form',
                    modal: true,
                    open: function () {
                        $(this).load('@Url.Action("AddUserPartialView", "Home")');
                    },
                    buttons: {
                        "Add User": function () {
                            addUserInfo();
                        },
                        Cancel: function () {
                            $(this).dialog("close");
                        }
                    }
                });
                return false;
            });
            function addUserInfo() {
                $.ajax({
                    url: '@Url.Action("AddUserInfo", "Home")',
                    type: 'POST',
                    data: $("#myForm").serialize(),
                    success: function (data) {
                        if (data.result) {
                            $(':input', '#myForm')
                                .not(':button, :submit, :reset, :hidden')
                                .val('')
                                .removeAttr('checked')
                                .removeAttr('selected');
                        } else {
                            $("#showErrorMessage").append(data.responseText);
                        }
                    }
                });
            }
        </script>
    }
