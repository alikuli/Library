@*@model InterfacesLibrary.SharedNS.ICommonWithId*@
@model  ModelsClassLibrary.ModelsNS.MenuNS.MenuManagerNS.IHaveMenuManager

@*The returnUrl is used for returning when in Menus. One does not want to end up back into the item mode if an edit is done from the
menus, but rather one should come back to where one started the edit from.*@


@*@Html.HiddenFor(model => model.Id)*@

@{
    var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string returnUrl = ViewBag.ReturnUrl as string;
}

@{    
    ModelsClassLibrary.ModelsNS.ProductNS.ProductNS.IProduct iproduct = Model as ModelsClassLibrary.ModelsNS.ProductNS.ProductNS.IProduct;
    MenuLevelENUM previousMenuLevel = iproduct.MenuManager.GetPreviousMenuLevel(); //Need this for bread crumbs}   
}
    <div class="col-xs-6 col-lg-6">
        @*@Html.Partial(@"ViewControls/index/_breadCrumbs")*@
    </div>

@Html.Partial(@"ViewControls/Edit/_breadCrumbs - Edit")
@Html.Partial(@"ViewControls/Edit/_EditHeading")

@using (Html.BeginForm("Edit", @controllerName, new { returnUrl = @ViewBag.ReturnUrl as string }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    @Html.Partial(@"_FieldsOnlyEditFormat")
    @Html.Partial(@"ViewControls/Uploads/_ShowUploads")
    @Html.Partial(@"ViewControls/Edit/_EditControls")
}

<div>
    @{
        string menuPath1 = "";
        string menuPath2 = "";
        string menuPath3 = "";

        ModelsClassLibrary.MenuNS.MenuPathMain pcm = Model as ModelsClassLibrary.MenuNS.MenuPathMain;
        if (!pcm.IsNull())
        {
            bool isMenu = (ViewBag.IsMenu) ?? false;
            if (isMenu)
            {
                menuPath1 = pcm.MenuPath1Id;
                menuPath2 = pcm.MenuPath2Id;
                menuPath3 = pcm.MenuPath3Id;
            }
        }

    }
        @if (returnUrl.IsNullOrWhiteSpace())
        { 
            @Html.ActionLink("Back to List", "Index", new { menuLevelEnum = @ViewBag.MenuLevelEnum,. Men })
        }
        else
        {
            <a href="@returnUrl">Back to List</a>
        }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


