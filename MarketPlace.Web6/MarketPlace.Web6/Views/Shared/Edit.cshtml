@model InterfacesLibrary.SharedNS.ICommonWithId

@{
    var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string menuPathMainId = "";
    string productId = "";
    string productChildId = "";
    string returnUrl = "";
    string selectId = "";
    string searchString = "";
    MenuENUM menuEnum = MenuENUM.unknown;


    ModelsClassLibrary.ModelsNS.MenuNS.MenuManagerNS.IHaveMenuManager ihaveMenuManager = Model as ModelsClassLibrary.ModelsNS.MenuNS.MenuManagerNS.IHaveMenuManager;
    
    if (!ihaveMenuManager.IsNull())
    {
        Model.MenuManager.MenuState.ControllerCurrentName = controllerName;
        controllerName = Model.MenuManager.MenuState.CreateAndEditLink_ControllerName;
        menuPathMainId = Model.MenuManager.MenuState.MenuPathMainId;
        productId = Model.MenuManager.MenuState.ProductId;
        productChildId = Model.MenuManager.MenuState.ProductChildId;
        selectId = Model.MenuManager.SelectedId;
        returnUrl = Model.MenuManager.CurrentUrl;
        searchString = Model.MenuManager.SearchString;
        menuEnum = Model.MenuManager.MenuState.MenuEnum;
    }
    
}
    
    


@*@Html.Partial(@"ViewControls/Edit/_breadCrumbs - Edit")*@
@Html.Partial(@"ViewControls/Edit/_EditHeading")

@*@using (Html.BeginForm("Edit", @controllerName, new { returnUrl = returnUrl}, FormMethod.Post, new { enctype = "multipart/form-data" }))*@
@using (Html.BeginForm("Edit", @controllerName, new { menuPathMainId = menuPathMainId, productId = productId, returnUrl = returnUrl, productChildId = productChildId, menuEnum = menuEnum, selectId = selectId, searchString = searchString }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.Id)
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    @Html.Partial(@"_FieldsOnlyEditFormat")
    @Html.Partial(@"ViewControls/Uploads/_ShowUploads")
    @Html.Partial(@"ViewControls/Edit/_EditControls")
}

<div>
    @{

    }
        @if (returnUrl.IsNullOrWhiteSpace())
        { 
            @Html.ActionLink("Back to List", "Index")
        }
        else
        {
            <a href="@returnUrl">Back to List</a>
        }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


