@model InterfacesLibrary.SharedNS.ICommonWithId

@{
    var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string menuPathMainId = "";
    string productId = "";
    string productChildId = "";
    string selectId = "";
    string searchString = "";
    MenuENUM menuEnum = MenuENUM.EditDefault;
    string showEditControlsStringValue = ViewBag.ShowEditControls as string;
    bool showEditControls = true;
    if(!showEditControlsStringValue.IsNullOrWhiteSpace())
    {
        showEditControls = false;
    }
    Model.MenuManager.MenuState.ControllerCurrentName = controllerName;
    controllerName = Model.MenuManager.MenuState.CreateAndEditLink_ControllerName;
    menuPathMainId = Model.MenuManager.MenuState.MenuPathMainId;
    productId = Model.MenuManager.MenuState.ProductId;
    productChildId = Model.MenuManager.MenuState.ProductChildId;
    selectId = Model.MenuManager.SelectedId;
    searchString = Model.MenuManager.SearchString;
    menuEnum = Model.MenuManager.MenuState.MenuEnum;

    string returnUrl = Model.MenuManager.ReturnUrl.IsNullOrWhiteSpace() ? Request.Url.PathAndQuery : Model.MenuManager.ReturnUrl;
    string editScreenName = string.Format("{0} - {1}", "Edit", Model.FullName());
    Model.MenuManager.BreadCrumbManager.Push(editScreenName, returnUrl);
    string urlMinusOne = Model.MenuManager.BreadCrumbManager.Url_CurrMinusOne;
    
}
    
    


@*@Html.Partial(@"ViewControls/Edit/_breadCrumbs - Edit")*@
@Html.Partial(@"ViewControls/BreadCrumbs/_newBreadCrumbs", @Model.MenuManager.BreadCrumbManager)
@Html.Partial(@"ViewControls/Edit/_EditHeading")

@{
    
    string actionName = this.ViewContext.RouteData.Values["action"].ToString();
}

@using (Html.BeginForm(actionName, @controllerName, new { menuPathMainId = menuPathMainId, productId = productId, returnUrl = returnUrl, productChildId = productChildId, menuEnum = menuEnum, selectId = selectId, searchString = searchString }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.Id)
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Partial("_messages")

    <div class="container-fluid">
        <div class="row">
            <div class="col">
                @Html.Partial(@"_FieldsOnlyEditFormat")
            </div>

            <div class="col ">
                @Html.Partial(@"ViewControls/Uploads/_ShowUploads")
            </div>
        </div>

    </div>

    <div class="form-group p-3">
        @if (showEditControls)
        {
            //In order to hide these you must give a value to ViewBag.ShowEditControls in Event_CreateViewAndSetupSelectList. See example in UploadedFiles
            @Html.Partial(@"ViewControls/Edit/_EditControls")
            @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn btn-danger" })
        }
    </div>

}

<div>
        <a href="@returnUrl">Back to List</a>
</div>

@section scripts
    {
    <script src="~/Scripts/MyScripts/_imageRoatationScript3.js"></script>


}
